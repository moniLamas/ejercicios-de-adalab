{"version":3,"sources":["components/App.js","index.js"],"names":["App","useState","initialData","data","setData","search","setSearch","newName","setNewName","newLastname","setNewLastname","newPhone","setNewPhone","newEmail","setNewEmail","htmlContactList","filter","contact","name","toLocaleLowerCase","includes","lastname","map","oneContact","index","className","lastName","href","phone","title","email","autoComplete","type","placeholder","onChange","ev","currentTarget","value","id","onClick","preventDefault","newContact","ReactDOM","render","document","getElementById"],"mappings":"wNAmKeA,MA/Jf,WACE,MAAwBC,mBAASC,GAAjC,mBAAOC,EAAP,KAAaC,EAAb,KAEA,EAA4BH,mBAAS,IAArC,mBAAOI,EAAP,KAAeC,EAAf,KACA,EAA8BL,mBAAS,IAAvC,mBAAOM,EAAP,KAAgBC,EAAhB,KACA,EAAsCP,mBAAS,IAA/C,mBAAOQ,EAAP,KAAoBC,EAApB,KACA,EAAgCT,mBAAS,IAAzC,mBAAOU,EAAP,KAAiBC,EAAjB,KACA,EAAgCX,mBAAS,IAAzC,mBAAOY,EAAP,KAAiBC,EAAjB,KAyCMC,EAAkBZ,EACrBa,QAEC,SAACC,GAAD,OAEEA,EAAQC,KAAKC,oBAAoBC,SAASf,EAAOc,sBACjDF,EAAQI,SACLF,oBACAC,SAASf,EAAOc,wBAEtBG,KAAI,SAACC,EAAYC,GAAb,OACH,qBAAIC,UAAU,gBAAd,UACE,oBAAGA,UAAU,gBAAb,UACE,uBAAOA,UAAU,iBAAjB,qBACCF,EAAWL,KAFd,IAEqBK,EAAWG,YAEhC,oBAAGD,UAAU,iBAAb,UACE,uBAAOA,UAAU,iBAAjB,0BACA,mBACEE,KAAI,eAAUJ,EAAWK,OACzBC,MAAK,sCAA8BN,EAAWL,MAFhD,SAIGK,EAAWK,WAGhB,oBAAGH,UAAU,gBAAb,UACE,uBAAOA,UAAU,iBAAjB,oBACA,mBACEE,KAAI,kBAAaJ,EAAWO,OAC5BD,MAAK,wCAAgCN,EAAWO,MAA3C,KAFP,SAIGP,EAAWO,aApBiBN,MA0BvC,OACE,sBAAKC,UAAU,OAAf,UAEE,yBAAQA,UAAU,SAAlB,UACE,oBAAIA,UAAU,gBAAd,oCACA,+BACE,uBACEA,UAAU,iBACVM,aAAa,MACbC,KAAK,SACLd,KAAK,SACLe,YAAY,+BACZC,SAxFgB,SAACC,GAEzB7B,EAAU6B,EAAGC,cAAcC,QAwFnBA,MAAOhC,SAKb,iCAEE,qBAAIoB,UAAU,gBAAd,UAA+BV,EAA/B,OAGA,uBAAMU,UAAU,oBAAhB,UACE,oBAAIA,UAAU,qBAAd,wCACA,uBACEA,UAAU,qBACVO,KAAK,OACLd,KAAK,OACLoB,GAAG,OACHL,YAAY,SACZC,SAtGe,SAACC,GACxB3B,EAAW2B,EAAGC,cAAcC,QAsGpBA,MAAO9B,IAET,uBACEkB,UAAU,qBACVO,KAAK,OACLd,KAAK,WACLoB,GAAG,WACHL,YAAY,YACZC,SA3GmB,SAACC,GAC5BzB,EAAeyB,EAAGC,cAAcC,QA2GxBA,MAAO5B,IAET,uBACEgB,UAAU,qBACVO,KAAK,QACLd,KAAK,QACLoB,GAAG,QACHL,YAAY,cACZC,SAjHgB,SAACC,GACzBvB,EAAYuB,EAAGC,cAAcC,QAiHrBA,MAAO1B,IAET,uBACEc,UAAU,qBACVO,KAAK,QACLd,KAAK,QACLoB,GAAG,QACHL,YAAY,QACZC,SAvHgB,SAACC,GACzBrB,EAAYqB,EAAGC,cAAcC,QAuHrBA,MAAOxB,IAET,uBACEY,UAAU,mBACVO,KAAK,SACLK,MAAM,YACNE,QA1HU,SAACJ,GACnBA,EAAGK,iBAEH,IAAMC,EAAa,CACjBvB,KAAMX,EACNc,SAAUZ,EACVmB,MAAOjB,EACPmB,MAAOjB,GAITT,EAAQ,GAAD,mBAAKD,GAAL,CAAWsC,KAElBjC,EAAW,IACXE,EAAe,IACfE,EAAY,IACZE,EAAY,iBC5ChB4B,IAASC,OAAQ,cAAE,EAAF,IAAYC,SAASC,eAAe,U","file":"static/js/main.fb168917.chunk.js","sourcesContent":["import { useState } from \"react\";\nimport \"../styles/App.scss\";\nimport initialData from \"../data/contacts.json\";\n\nfunction App() {\n  const [data, setData] = useState(initialData);\n\n  const [search, setSearch] = useState(\"\");\n  const [newName, setNewName] = useState(\"\");\n  const [newLastname, setNewLastname] = useState(\"\");\n  const [newPhone, setNewPhone] = useState(\"\");\n  const [newEmail, setNewEmail] = useState(\"\");\n\n  const hadleChangeSearch = (ev) => {\n    //funcion para cambiar el valor de la variable estado search con el valor que introduce la usuaria, lo utilizamos para filtrar el array de datos[data]\n    setSearch(ev.currentTarget.value);\n    //si hago un console.log mostrará el valor introducido por la usuaria\n  };\n\n  const handleChangeName = (ev) => {\n    setNewName(ev.currentTarget.value);\n  };\n\n  const handleChangeLastname = (ev) => {\n    setNewLastname(ev.currentTarget.value);\n  };\n  const handleChangePhone = (ev) => {\n    setNewPhone(ev.currentTarget.value);\n  };\n  const handleChangeEmail = (ev) => {\n    setNewEmail(ev.currentTarget.value);\n  };\n\n  const handleClick = (ev) => {\n    ev.preventDefault();\n\n    const newContact = {\n      name: newName,\n      lastname: newLastname,\n      phone: newPhone,\n      email: newEmail,\n    };\n\n    //el spread añadiende un nuevo objeto {newContact} al array [data]\n    setData([...data, newContact]);\n\n    setNewName(\"\");\n    setNewLastname(\"\");\n    setNewPhone(\"\");\n    setNewEmail(\"\");\n  };\n  //data.filter().map()\n  const htmlContactList = data\n    .filter(\n      //filtramos nombre y apellido con el operador ||\n      (contact) =>\n        //includes nos busca el valor search dentro del valor contact.name-lastname\n        contact.name.toLocaleLowerCase().includes(search.toLocaleLowerCase()) ||\n        contact.lastname\n          .toLocaleLowerCase()\n          .includes(search.toLocaleLowerCase())\n    )\n    .map((oneContact, index) => (\n      <li className=\"contact__item\" key={index}>\n        <p className=\"contact__name\">\n          <label className=\"contact__label\">Nombre:</label>\n          {oneContact.name} {oneContact.lastName}\n        </p>\n        <p className=\"contact__phone\">\n          <label className=\"contact__label\">Teléfono:</label>\n          <a\n            href={`tel: ${oneContact.phone}`}\n            title={`Pulsa aquí para llamar a ${oneContact.name}`}\n          >\n            {oneContact.phone}\n          </a>\n        </p>\n        <p className=\"contact__mail\">\n          <label className=\"contact__label\">Email:</label>\n          <a\n            href={`mailto: ${oneContact.email}`}\n            title={`Pulsa aquí para escribir a ${oneContact.email} `}\n          >\n            {oneContact.email}\n          </a>\n        </p>\n      </li>\n    ));\n\n  return (\n    <div className=\"page\">\n      {/* header */}\n      <header className=\"header\">\n        <h1 className=\"header__title\">Mi agenda de contactos</h1>\n        <form>\n          <input\n            className=\"header__search\"\n            autoComplete=\"off\"\n            type=\"search\"\n            name=\"search\"\n            placeholder=\"Filtrar contactos por nombre\"\n            onChange={hadleChangeSearch}\n            //variable estado para tener controlado el valor que introduce el usuario\n            value={search}\n          />\n        </form>\n      </header>\n\n      <main>\n        {/* contact list */}\n        <ul className=\"contact__list\">{htmlContactList};</ul>\n\n        {/* new contact */}\n        <form className=\"new-contact__form\">\n          <h2 className=\"new-contact__title\">Añade un nuevo contacto</h2>\n          <input\n            className=\"new-contact__input\"\n            type=\"text\"\n            name=\"name\"\n            id=\"name\"\n            placeholder=\"Nombre\"\n            onChange={handleChangeName}\n            value={newName}\n          />\n          <input\n            className=\"new-contact__input\"\n            type=\"text\"\n            name=\"lastname\"\n            id=\"lastname\"\n            placeholder=\"Apellidos\"\n            onChange={handleChangeLastname}\n            value={newLastname}\n          />\n          <input\n            className=\"new-contact__input\"\n            type=\"phone\"\n            name=\"phone\"\n            id=\"phone\"\n            placeholder=\"Teléfono\"\n            onChange={handleChangePhone}\n            value={newPhone}\n          />\n          <input\n            className=\"new-contact__input\"\n            type=\"email\"\n            name=\"email\"\n            id=\"email\"\n            placeholder=\"Email\"\n            onChange={handleChangeEmail}\n            value={newEmail}\n          />\n          <input\n            className=\"new-contact__btn\"\n            type=\"submit\"\n            value=\"Añadir\"\n            onClick={handleClick}\n          />\n        </form>\n      </main>\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './components/App';\n\n\nReactDOM.render( < App / > , document.getElementById('root'));"],"sourceRoot":""}